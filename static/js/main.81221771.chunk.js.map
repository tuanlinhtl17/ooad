{"version":3,"sources":["Question.js","QuestionList.js","databases/ooad/ooad1.js","databases/ooad/ooad2.js","databases/ooad/ooad3.js","App.js","serviceWorker.js","index.js"],"names":["Alphabet","Question","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","is_correct","selected","corrects","checked","c_as","map","correct","join","react_default","a","createElement","_this$props","question","index","className","key","cont","Form","answers","answer","a_index","type","value","displayCorrects","Component","QuestionList","checkAnswer","setState","_this2","questions","src_Question","Button","variant","onClick","questions1","questions2","questions3","App","react_router_dom","Container","Jumbotron","Pagination","Item","to","react_router","path","exact","component","src_QuestionList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81221771.chunk.js","sourcesContent":["import React, {\r\n  Component\r\n} from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\"]\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_correct: false,\r\n      selected: []\r\n    }\r\n  }\r\n\r\n  // checkBoxClick = (e) => {\r\n  //   if (e.target.checked) {\r\n  //     this.setState({\r\n  //       selected: [...this.state.selected, e.target.value]\r\n  //     })\r\n  //   } else {\r\n  //     let newSelected = this.state.selected.splice(this.state.selected.indexOf(e.target.value), 1)\r\n  //     this.setState({\r\n  //       selected: newSelected\r\n  //     })\r\n  //   }\r\n  //   console.log(this.state.selected);\r\n  // }\r\n\r\n  displayCorrects(corrects, checked) {\r\n    if (checked) {\r\n      let correct_answers = corrects.map(correct => Alphabet[correct]);\r\n      let c_as = correct_answers.join(' ');\r\n      return <p>Correct answers: <strong>{c_as}</strong></p>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { question, index, checked } = this.props;\r\n    return (\r\n      <div className=\"question\" key={index}>\r\n        <p className=\"content\"><strong>{index + 1}. {question.cont}</strong></p>\r\n        <Form>\r\n          {\r\n            question.answers.map((answer, a_index) => {\r\n              return (\r\n                <div key={a_index}>\r\n                  <input type=\"checkbox\" value={a_index} />\r\n                  <label><strong>{Alphabet[a_index]}.</strong> {answer}</label>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </Form>\r\n        {this.displayCorrects(question.corrects, checked)}\r\n        <br />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, {Component} from 'react';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport Question from './Question';\r\n\r\nclass QuestionList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    }\r\n  }\r\n\r\n  checkAnswer = () => {\r\n    this.setState({checked: true})\r\n  }\r\n\r\n  render() {\r\n    const { questions } = this.props\r\n    return (\r\n      <div className=\"questions\">\r\n        {\r\n          questions.map((question, index) => {\r\n            return (\r\n              <Question \r\n                key={index}\r\n                question={question}\r\n                index={index}\r\n                checked={this.state.checked} \r\n              />\r\n            )\r\n          })\r\n        }\r\n  \r\n        <Button variant=\"primary\" onClick={this.checkAnswer}>Check</Button>\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QuestionList;\r\n","export const questions1 = [{\r\n    cont: \"Phát biểu nào sau đây là chính xác?\",\r\n    answers: [\r\n      \"UML là quy trình phát triển các hệ thống phần mềm\",\r\n      \"UML là ngôn ngữ phụ thuộc vào quy trình phát triển và được sử dụng để biểu diễn trực quan các chế tác phần mềm\",\r\n      \"UML là ngôn ngữ mô hình hóa cho các bản thiết kế phần mềm\",\r\n      \"UML là ngôn ngữ lập trình trực quan\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Đâu là 3 điểm khác biệt giữa lớp cấu trúc và lớp truyền thống (Chọn 3)\",\r\n    answers: [\r\n      \"Nó định nghĩa rõ ràng một lớp biên thông qua một vỏ bao đóng (encapsulation shell)\",\r\n      \"Nó đưa ra các public interfaces cho lớp thông qua các cổng\",\r\n      \"Nó cho thấy vai trò của lớp\",\r\n      \"Nó định nghĩa các message giữa chính nó và các lớp khác\"\r\n    ],\r\n    corrects: [0, 1, 2]\r\n  },\r\n  {\r\n    cont: \"Đâu là đặc điểm của lớp cấu trúc ?\",\r\n    answers: [\r\n      \"Phải có một giao diện cho mỗi vai trò\",\r\n      \"Chỉ có thể đóng một vai trò, bất kể có bao nhiêu đối tượng giao dịch với nó\",\r\n      \"Có thể đóng nhiều vai trò khác nhau dựa trên các đối tượng tương tác với nó\",\r\n      \"Bị giới hạn ở một vai trò, nhưng có thể có nhiều giao diện\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng về một quá trình phát triển lặp\",\r\n    answers: [\r\n      \"Test và tích hợp trong mỗi lần lặp\",\r\n      \"Mỗi lần lặp lại tập trung vào một phần của hiện thực hóa use-case được lựa chọn\",\r\n      \"Nó khuyến khích phản hồi người dùng trong các lần lặp sau\",\r\n      \"Nó dựa trên chức năng phân hủy của một hệ thống\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Hai câu nào đúng về giao diện?\",\r\n    answers: [\r\n      \"Giao diện nên có mục đích rõ ràng\",\r\n      \"Một giao diện duy nhất nên bao gồm càng nhiều phương thức có thể, nếu không phải tất cả các phương thức, có thể được chia sẻ\",\r\n      \"Một giao diện nên được sử dụng để hạn chế phương thức nào được tiếp xúc với máy khách\",\r\n      \"Các lớp có thể có nhiều giao diện tùy thuộc vào mục đích của từng giao diện mà nó thực hiện\"\r\n    ],\r\n    corrects: [0, 3]\r\n  },\r\n  {\r\n    cont: \"Trọng tâm của phân tích là gì?\",\r\n    answers: [\r\n      \"Chuyển các yêu cầu chức năng thành code\",\r\n      \"Chuyển các yêu cầu thành một thiết kế hệ thống\",\r\n      \"Chuyển các khái niệm trong thế giới thực sang các solution-oriented objects\",\r\n      \"Chuyển các yêu cầu chức năng thành các khái niệm phần mềm\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n  {\r\n    cont: \"Tại sao đóng gói lại quan trọng? (Chọn hai)\",\r\n    answers: [\r\n      \"Nó mô tả mối quan hệ giữa hai lớp con\",\r\n      \"Nó đặt các hoạt động và thuộc tính trong cùng một đối tượng\",\r\n      \"Nó cho phép các đối tượng khác thay đổi các private operations và attributes của một đối tượng\",\r\n      \"Nó ngăn các đối tượng khác thay đổi trực tiếp các thuộc tính của một đối tượng\"\r\n    ],\r\n    corrects: [1, 3]\r\n  },\r\n  {\r\n    cont: \"Các lớp phân tích là gì?\",\r\n    answers: [\r\n      \"Các dự đoán ban đầu về cấu trúc của hệ thống, chúng thường thay đổi theo thời gian và hiếm khi tồn tại nguyên vẹn cho đến khi được cài đặt\",\r\n      \"Các lớp không hoàn thiện mà lập trình viên cần xác lập tên của các thao tác và kiểu của các thuộc tính trước khi chúng có thể cài đặt được\",\r\n      \"Các lớp bên trong một hệ thống đối tượng nghiệp vụ (Business object) hoặc mô hình miền (Domain Model) sử dụng UML\",\r\n      \"Một nguyên mẫu (prototype) của giao diện người dùng của một hệ thống, được phát triển trong Pha phân tích, cho phép người dùng xác định giao diện và tương tác với hệ thống\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Một kiến trúc sư có trách nhiệm tạo ra một mô hình phân tích cho một hệ thống. Để tạo ra mô hình này cần tập trung vào phần nào?\",\r\n    answers: [\r\n      \"Phần cứng nơi mà hệ thống được triển khai\",\r\n      \"Hành vi của các đối tượng bao gồm hệ thống\",\r\n      \"Sự phát triển của hệ thống phân tích vào hệ thống thiết kế\",\r\n      \"Yêu cầu về hiệu năng của hệ thống\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Một required interface làm gì?\",\r\n    answers: [\r\n      \"Trưng bày dịch vụ cho người yêu cầu ẩn danh\",\r\n      \"Sử dụng các dịch vụ mà trình phân loại yêu cầu để yêu cầu từ các nhà cung cấp ẩn danh\",\r\n      \"Tuyên bố các dịch vụ mà trình phân loại cung cấp để cung cấp cho người yêu cầu ẩn danh\",\r\n      \"Trưng bày ra các phương thức mà người yêu cầu phải sử dụng\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Trong sơ đồ trình tự, mỗi tương tác trên sơ đồ ánh xạ tới\",\r\n    answers: [\r\n      \"một điểm lựa chọn trên sơ đồ trạng thái\",\r\n      \"quá trình chuyển đổi trên sơ đồ trạng thái\",\r\n      \"một trạng thái trên sơ đồ\",\r\n      \"trạng thái ban đầu\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Hai câu hỏi nào cần phải trả lời khi muốn sử dụng mối quan hệ nhiều-nhiều (Chọn hai)?\",\r\n    answers: [\r\n      \"Đó là mối quan hệ ràng buộc hay tùy chọn?\",\r\n      \"Có bao nhiêu liên kết một đối tượng của một loại duy trì với các đối tượng của loại khác?\",\r\n      \"Một đối tượng của một loại nhất định được phép tương tác với các đối tượng của loại khác?\",\r\n      \"Mối quan hệ giữa các đối tượng là vĩnh viễn hay tạm thời?\"\r\n    ],\r\n    corrects: [0, 1]\r\n  },\r\n  {\r\n    cont: \"Hai cân nhắc quan trọng khi vẽ sơ đồ trạng thái là gì?\",\r\n    answers: [\r\n      \"Bất cứ khi nào một tin nhắn được nhận; có thể có một sự thay đổi của trạng thái\",\r\n      \"Bất cứ khi nào một tin nhắn được nhận; phải có một sự thay đổi của trạng thái\",\r\n      \"Bất cứ khi nào có sự thay đổi trạng thái, sẽ có một transition\",\r\n      \"Thay đổi trạng thái có thể không thay đổi transition\"\r\n    ],\r\n    corrects: [0, 2]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng về phụ thuộc vòng tròn?\",\r\n    answers: [\r\n      \"Nó không quan trọng\",\r\n      \"Nó bị cấm\",\r\n      \"Nó phải được tránh\",\r\n      \"Khi có nhiều hơn hai gói (package), chúng không liên quan\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Mục đích của phân tích kiến ​​trúc là gì ?\",\r\n    answers: [\r\n      \"để chi tiết thiết kế của hệ thống\",\r\n      \"để xem xét kiến ​​trúc của hệ thống\",\r\n      \"để xác định kiến ​​trúc ứng cử viên cho hệ thống\",\r\n      \"để xác định các tầng (layers) của kiến ​​trúc\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng về thuộc tính?\",\r\n    answers: [\r\n      \"Chúng không thể thay đổi một khi đối tượng được khởi tạo\",\r\n      \"Chúng thay đổi giá trị từ đối tượng sang đối tượng của cùng một lớp\",\r\n      \"Chúng chỉ có thể là giá trị nguyên thủy\",\r\n      \"Chúng được yêu cầu cho mọi lớp\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Phân tích thiết kế hướng đến ba mục đích nào? (Chọn ba)\",\r\n    answers: [\r\n      \"Cung cấp một khung cảnh tổ chức cho hệ thống\",\r\n      \"Chuyển các yêu cầu sang bản thiết kế hệ thống\",\r\n      \"Tiến hóa và hình thành cấu trúc vững chắc cho hệ thống\",\r\n      \"Xác định phạm vi của hệ thống và mô tả những gì hệ thống phải làm\",\r\n      \"Thích ứng bản thiết kế với môi trường cài đặt\"\r\n    ],\r\n    corrects: [1, 3, 4]\r\n  },\r\n  {\r\n    cont: \"Các đối tượng đa hình _____\",\r\n    answers: [\r\n      \"phải có cùng thuộc tính\",\r\n      \"chia sẻ tất cả các operation giống nhau và các operation thực hiện như nhau\",\r\n      \"chỉ có thể được implement thông qua các giao diện\",\r\n      \"có thể có cùng tên operation nhưng các operation thực hiện khác nhau\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n  {\r\n    cont: \"Trong khâu Phân tích kiến trúc, kiến trúc sư phần mềm phải dựa vào đâu để giảm độ phức tạp của hệ thống và tăng tính nhất quán?\",\r\n    answers: [\r\n      \"Các quy tắc viết mã\",\r\n      \"Các hiện thực hóa ca sử dụng\",\r\n      \"Các cơ chế phân tích\",\r\n      \"Các cơ chế thiết kế\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Hai đặc điểm nào mà tất cả các đối tượng có? (Chọn hai)\",\r\n    answers: [\r\n      \"Nguyên thủy\",\r\n      \"Trạng thái và hành vi\",\r\n      \"Giao diện (interface)\",\r\n      \"Một định danh riêng\"\r\n    ],\r\n    corrects: [1, 3]\r\n  },\r\n]","export const questions2 = [{\r\n    cont: \"Các lớp phân tích phát triển thành ____ (Chọn hai)\",\r\n    answers: [\r\n      \"Các lớp thiết kế\",\r\n      \"Các hệ thống con\",\r\n      \"Các hiện thực hóa ca sử dụng\",\r\n      \"Các gói thiết kế (design packages)\",\r\n      \"Kiến trúc\"\r\n    ],\r\n    corrects: [0, 1]\r\n  },\r\n  {\r\n    cont: \"Chuyện gì xảy ra khi một lớp cha thay đổi?\",\r\n    answers: [\r\n      \"Tất cả các class con thay đổi\",\r\n      \"Các operations của các class con thay đổi\",\r\n      \"Các phương thức được thêm trong class con mà không có trong class cha phải thay đổi\",\r\n      \"Chỉ có các phương thức được kế thừa từ class cha thay đổi\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng với hiện thực hóa ca sử dụng?\",\r\n    answers: [\r\n      \"Liệt kê các bước khác nhau mà 1 ca sử dụng thực hiện\",\r\n      \"Nó được tạo ra bởi người phân tích hệ thống\",\r\n      \"Nó là một phần trong Đặc tả yêu cầu phần mềm\",\r\n      \"Thẩm định sự tương ứng từ phân tích và thiết kế với đặc tả yêu cầu\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n  {\r\n    cont: \"Trạng thái nào KHÔNG chứa trạng thái khác?\",\r\n    answers: [\r\n      \"Top State\",\r\n      \"Composite State\",\r\n      \"Simple State\",\r\n      \"Bottom State\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng về việc nhóm các thành phần vào một gói?\",\r\n    answers: [\r\n      \"Các thành phần trong cùng một gói nên chia sẻ logic, giải pháp chung\",\r\n      \"Các gói nên chứa một số lượng nhỏ các thành phần để tránh nhầm lẫn\",\r\n      \"Các gói chỉ nên được sử dụng cho các dự án lớn đòi hỏi một số lượng lớn các thành phần\",\r\n      \"Các gói không nên chứa các gói khác\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Có ba phân nhóm cơ chế kiến trúc bao gồm: (Chọn ba)\",\r\n    answers: [\r\n      \"Các cơ chế phân tích\",\r\n      \"Các cơ chế yêu cầu\",\r\n      \"Các cơ chế cài đặt\",\r\n      \"Các cơ chế thiết kế\"\r\n    ],\r\n    corrects: [0, 2, 3]\r\n  },\r\n  {\r\n    cont: \"Trong biểu đồ tuần tự, những gì có thể được xác định bởi các tương tác giữa các thành phần ?\",\r\n    answers: [\r\n      \"Chỉ có các dịch vụ được cung cấp bởi một giao diện\",\r\n      \"Chỉ có các dịch vụ được yêu cầu bởi một giao diện\",\r\n      \"Các dịch vụ được cung cấp và yêu cầu bởi một giao diện\",\r\n      \"Tên của giao diện\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Khung nhìn nào tập trung vào hiện thực hóa vật lý của hệ thống ?\",\r\n    answers: [\r\n      \"Khung logic\",\r\n      \"Khung cài đặt\",\r\n      \"Khung tiến trình\",\r\n      \"Khung ca sử dụng\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là đúng về một active object?\",\r\n    answers: [\r\n      \"Nó là một object độc lập có thể giao tiếp với các active object khác một cách không đồng bộ\",\r\n      \"Nó không chứa trạng thái\",\r\n      \"Nó phụ thuộc vào việc thực hiện toàn bộ hệ thống\",\r\n      \"Nó không có cấu trúc để cho phép lớp được thao tác dễ dàng\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Trong khâu Phân tích ca sử dụng, hành vi nào được phân bố cho các lớp điều khiển?\",\r\n    answers: [\r\n      \"Hành vi đặc thù của ca sử dụng hoặc một phần của luồng sự kiện quan trọng\",\r\n      \"Hành vi liên quan đến dữ liệu được bao gói trong các trừu tượng\",\r\n      \"Hành vi liên quan đến giao tiếp với tác nhân\",\r\n      \"Hành vi đặc thù về quy tắc nghiệp vụ hoặc luồng nghiệp vụ\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Ba nguồn để xác định Trừu tượng chính là gì? (Chọn ba)\",\r\n    answers: [\r\n      \"Kiến thức nghiệp vụ\",\r\n      \"Yêu cầu\",\r\n      \"Lớp thiết kế\",\r\n      \"Bảng thuật ngữ\"\r\n    ],\r\n    corrects: [0, 1, 3]\r\n  },\r\n  {\r\n    cont: \"Đâu là một tên của object trong UML?\",\r\n    answers: [\r\n      \"Matt:Employee\",\r\n      \":Employee\",\r\n      \"Matt::Employee\",\r\n      \"::employee\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Trong Phân tích ca sử dụng, một thuộc tính nên được sử dụng thay vì một lớp khi thông tin ___\",\r\n    answers: [\r\n      \"được truy cập bởi các operations mà chỉ get, set, hoặc chuyển đổi đơn giản\",\r\n      \"có liên quan đến các thực thể trong mô hình doanh nghiệp hoặc nghiệp vụ\",\r\n      \"cần được ẩn khỏi các phần khác của Mô hình phân tích và không được chia sẻ\",\r\n      \"được nhắc đến và sử dụng nhiều lần trong suốt quá trình thực hiện ca sử dụng\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Khung nhìn 4+1 nào dưới đây tập trung vào khâu Mô tả Phân tán?\",\r\n    answers: [\r\n      \"Khung Logic\",\r\n      \"Khung Triển khai\",\r\n      \"Khung ca sử dụng\",\r\n      \"Khung cài đặt\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Chức năng của mô hình hóa trực quan là gì? (Chọn hai)\",\r\n    answers: [\r\n      \"tạo ra một mô hình đơn biểu diễn mọi khía cạnh của hệ thống\",\r\n      \"nâng cao sự giao tiếp và khả năng hiểu được hệ thống trong các thành viên trong đội dự án phần mềm\",\r\n      \"làm tài liệu về những quyết định thiết kế quan trọng trong khi viết chương trình\",\r\n      \"làm tài liệu về hành vi và cấu trúc của hệ thống trước khi viết mã cho chương trình\"\r\n    ],\r\n    corrects: [1, 3]\r\n  },\r\n  {\r\n    cont: \"Trong phân tích ca sử dụng, tại sao nên sử dụng các cơ chế Phân tích?\",\r\n    answers: [\r\n      \"Để giảm độ phức tạp và tăng tính nhất quán bằng cách cung cấp ký hiệu cho những hành vi phức tạp\",\r\n      \"Để đơn giản hóa nhiệm vụ tạo ra các use-case, cung cấp ký hiệu viết tắt cho các nhiệm vụ lặp đi lặp lại\",\r\n      \"Để thu thập các nhiệm vụ chung vào một nơi, dễ dàng cho nhà phát triển thưc hiện\",\r\n      \"Để chứng minh rằng các nhà thiết kế đã thực hiện chính xác như thiết kế của các kiến trúc sư\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào là chính xác về các pattern?\",\r\n    answers: [\r\n      \"Pattern chỉ xuất hiện ở trong mức Thiết kế\",\r\n      \"Pattern cung cấp một giải pháp chung cho những vấn đề chung\",\r\n      \"Pattern chỉ xuất hiện ở trong mức Kiến trúc\",\r\n      \"Pattern chỉ được sử dụng trong Giai đoạn xây dựng (Elaboration Phase)\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Trong khâu Phân tích ca sử dụng, tại sao thường phải bổ sung các mô tả ca sử dụng?\",\r\n    answers: [\r\n      \"Mô tả ca sử dụng không phải luôn chứa đủ thông tin để xác định lớp và đối tượng phân tích\",\r\n      \"Luồng sự kiện ca sử dụng thường quá phức tạp để thực hiện được\",\r\n      \"Người thiết kế cần biết luồng ca sử dụng nào đang được phân tích cho lần lặp hiện thời\",\r\n      \"Kiến trúc sư cần phải điều chỉnh các lỗi trước khi chuyển bản đặc tả ca sử dụng cho bên thiết kế\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Trong phân tích ca sử dụng, mục đích của bước hợp nhất (unify) các lớp phân tích là gì?\",\r\n    answers: [\r\n      \"để chắc chắn rằng mỗi lớp phân tích là đại diện cho một khái niệm rạch ròi và không bị trùng khớp trách nhiệm\",\r\n      \"để tập hợp các lớp phân tích từ hiệ thực hóa ca sử dụng và đưa chúng vào mô hình thiết kế\",\r\n      \"để đảm bảo trách nhiệm của các mỗi là thống nhất và những lớp đó có mục đích rõ ràng\",\r\n      \"để tạo họ các lớp khởi tạo ban đầu bằng việc áp dụng thừa kế để nhóm các lớp liên quan theo những cấu trúc cây\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Tiến trình nào sau đây là phù hợp nhất cho UML? (Chọn ba)\",\r\n    answers: [\r\n      \"use-case driven\",\r\n      \"waterfall development-based\",\r\n      \"interative and incremental\",\r\n      \"architecture-centric\",\r\n      \"requirements-centric\"\r\n    ],\r\n    corrects: [0, 2, 3]\r\n  },\r\n]","export const questions3 = [{\r\n    cont: \"Trong một sơ đồ trạng thái, một trạng thái có hai chuyển tiếp. Một trong những chuyển đổi là một chuyển tiếp nội bộ và một trong những chuyển tiếp là một chuyển tiếp bên ngoài. Những trạng thái nào có thể thực hiện một hành động thoát?\",\r\n    answers: [\r\n      \"Chỉ trạng thái chuyển tiếp nội bộ\",\r\n      \"Chị trạng thái chuyển tiếp bên ngoài\",\r\n      \"Cả 2 đều không phải\",\r\n      \"Cả 2 đều đúng\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Các lớp kiến ​​trúc thường được mô hình hóa trong UML bằng cách sử dụng một ___\",\r\n    answers: [\r\n      \"package stereotyped <<Layer>>\",\r\n      \"subsystem stereotyped <<Layer>>\",\r\n      \"composite class stereotyped <<Layer>>\",\r\n      \"class diagram entitled Layer\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Hai câu nào là đúng về use-case driven processes? (Chọn hai)\",\r\n    answers: [\r\n      \"Các ca sử dụng ngắn gọn, đơn giản và có thể hiểu được bởi các bên liên quan\",\r\n      \"Ca sử dụng giúp đồng bộ hóa nội dung của các mô hình khác nhau\",\r\n      \"Ca sử dụng là một danh sách đầy đủ các yêu cầu chức năng\",\r\n      \"Các ca sử dụng xác định cách thức thực hiện hành vi hệ thống\"\r\n    ],\r\n    corrects: [0, 1]\r\n  },\r\n  {\r\n    cont: \"Cơ chế chung nào của UML cho phép nhóm các thành phần vào trong cùng một nhóm?\",\r\n    answers: [\r\n      \"một biểu đồ lớp (class diagram)\",\r\n      \"một biểu đồ hoạt động (activity diagram)\",\r\n      \"một gói (package)\",\r\n      \"một biểu đồ phức hợp (composite diagram)\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Trong phân tích ca sử dụng, cần bao nhiêu biểu đồ tương tác (tuần tự hoặc giao tiếp) cho mỗi ca sử dụng?\",\r\n    answers: [\r\n      \"Đủ cho mỗi biểu đồ để đảm bảo rằng tất cả các trách nhiệm của các lớp tham gia đều được nhận biết và đa phần các luồng sự kiện đã được mô tả\",\r\n      \"một biểu đồ cho luồng sự kiện chính và một biểu đồ cho luồng sự kiện chuyển đổi trong ca sử dụng\",\r\n      \"một biểu đồ tuần tự và giao tiếp cho luồng sự kiện chính, mỗi loại một biểu đồ cho luồng sự kiện chuyển đổi\",\r\n      \"mỗi loại một biểu đồ cho từng ca sử dụng\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Trong phân tích ca sử dụng, các lớp biên có những chức năng gì?\",\r\n    answers: [\r\n      \"Ngăn cách giữa các tương tác từ ngoài với các cơ chế bên trong và ngược lại\",\r\n      \"Đại diện cho các màn hình trong giao diện người dùng\",\r\n      \"Định nghĩa các giao diện dịch vụ mà tầng Bussiness cung cấp\",\r\n      \"Định nghĩa các điểm truy nhập tới mô hình dữ liệu đối tượng của hệ thống\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Đâu là ba mục đích của thiết kế ca sử dụng? (Chọn ba)\",\r\n    answers: [\r\n      \"để làm mịn các hiện thực hóa ca sử dụng về mặt tương tác\",\r\n      \"để đảm bảo tính đầy đủ của các lớp tham gia (View of Participating Classes) cho mỗi hiện thực hóa ca sử dụng\",\r\n      \"để làm mịn các yêu cầu về các thao tác của lớp thiết kế\",\r\n      \"để làm mịn các yêu cầu về các thao tác (operations) của các hệ thống con thiết kế và các giao diện (interfaces)\"\r\n    ],\r\n    corrects: [0, 2, 3]\r\n  },\r\n  {\r\n    cont: \"Mục đích của thiết kế hệ thống con là gì?\",\r\n    answers: [\r\n      \"hoàn thiện chi tiết của từng interface mà hệ thống con cài đặt\",\r\n      \"phân chia hệ thống thành các hệ thống con nhằm phân các hệ thống con đó cho các đội phát triển khác nhau\",\r\n      \"định nghĩa các hành vi được đặc tả trong các interfaces của hệ thống con theo sự cộng tác giữa các phần tử thiết kế bên trong hệ thống con đó\",\r\n      \"xác định xem mỗi hệ thống con sẽ được cài đặt tại tầng nào và cơ chế giao tiếp nào sẽ được sử dụng giữa chúng\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Thành phần nào được dùng để mô tả hiện thực hóa ca sử dụng?\",\r\n    answers: [\r\n      \"các đặc tả ca sử dụng\",\r\n      \"các biểu đồ giao tiếp\",\r\n      \"các biểu đồ trạng thái\",\r\n      \"các biểu đồ hoạt động\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Phát biểu nào đúng về các hệ thống con trong thiết kế?\",\r\n    answers: [\r\n      \"Chúng đóng gói (encapsulate) một phần hành vi\",\r\n      \"Chúng đại diện một chức năng độc lập với các giao diện (interface) được định nghĩa rõ ràng\",\r\n      \"Chúng mô hình hóa một cách cài đặt\",\r\n      \"Chúng chỉ có thể chứa các lớp thiết kế\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Một hệ thống con nên ___\",\r\n    answers: [\r\n      \"phụ thuộc vào các giao diện của hệ thống khác\",\r\n      \"chỉ phụ thuộc vào chính nó\",\r\n      \"là một tập nhỏ các lớp được định nghĩa rõ ràng và cung cấp những APIs cho bên ngoài\",\r\n      \"chạy cho các dịch vụ của riêng nó\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Câu nào là đúng về gói và hệ thống con?\",\r\n    answers: [\r\n      \"Một gói không thể chứa một hệ thống con\",\r\n      \"Một gói cung cấp hành vi\",\r\n      \"Một hệ thống con cung cấp hành vi\",\r\n      \"Sử dụng gói khi cần đóng gói hành vi\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Trong thiết kế hệ thống con có bao nhiêu biểu đồ tương tác (tuần tự hoặc giao tiếp) được tạo ra?\",\r\n    answers: [\r\n      \"ít nhất một biểu đồ tương tác cho mỗi giao diện\",\r\n      \"một biểu đồ tương tác cho mỗi hiện thực hóa giao diện\",\r\n      \"ít nhất một biểu đồ tương tác cho mỗi sử dụng của giao diện ngoài\",\r\n      \"mỗi biểu đồ tương tác cho từng lớp\"\r\n    ],\r\n    corrects: [0]\r\n  },\r\n  {\r\n    cont: \"Hai phát biểu nào sau đây là chính xác về hiện thực hóa ca sử dụng? (Chọn hai)\",\r\n    answers: [\r\n      \"liệt kê các bước khác nhau được thực hiện bởi ca sử dụng\",\r\n      \"cung cấp sự lần vết từ phân tích và thiết kế ngược trở lại đặc tả yêu cầu\",\r\n      \"được tạo bởi các nhà phân tích hệ thống\",\r\n      \"mô tả ca sử dụng thông qua sự cộng tác giữa các đối tượng\"\r\n    ],\r\n    corrects: [1, 3]\r\n  },\r\n  {\r\n    cont: \"Trách nhiệm của các hệ thống con được xác định dựa vào đâu?\",\r\n    answers: [\r\n      \"hành vi của các lớp trong hệ thống con\",\r\n      \"các thao tác của giao diện hệ thống con\",\r\n      \"các hiện thực hóa ca sử dụng trong đó có các hệ thống con\",\r\n      \"các thao tác của lớp được chứa trong hệ thống con\"\r\n    ],\r\n    corrects: [1]\r\n  },\r\n  {\r\n    cont: \"Thành phần nào của UML được dùng để mô tả kiến trúc vật lý của một hệ thống?\",\r\n    answers: [\r\n      \"các lớp và mối quan hệ\",\r\n      \"các đối tượng và thông điệp trao đổi\",\r\n      \"các hệ thống con và sự phụ thuộc\",\r\n      \"các nút và kết nối giữa chúng\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n  {\r\n    cont: \"Trong biểu đồ tuần tự, thành phần nào được dùng để đại diện cho một hệ thống con cụ thể?\",\r\n    answers: [\r\n      \"một giao diện mà hệ thống con thực hiện\",\r\n      \"một sự ủy quyền của hệ thống con\",\r\n      \"một thành phần của hệ thống con\",\r\n      \"một lớp của hệ thống con\"\r\n    ],\r\n    corrects: [2]\r\n  },\r\n  {\r\n    cont: \"Mục đích chính của biểu đồ ca sử dụng là?\",\r\n    answers: [\r\n      \"tạo bảng từ vựng thống nhất giữa người dùng và người phân tích\",\r\n      \"biểu diễn tương tác người dùng trong hệ thống\",\r\n      \"bổ sung thông tin chi tiết như các thuộc tính hay các phương thức của lớp\",\r\n      \"mô hình hóa các tương tác giữa hệ thống và môi trường\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n  {\r\n    cont: \"Chế tác nào là đầu vào cho khâu xác định phân tử thiết kế?\",\r\n    answers: [\r\n      \"Mô hình triển khai\",\r\n      \"Mô hình cài đặt\",\r\n      \"Kiến trúc tham chiếu\",\r\n      \"Tài liệu kiến trúc phần mềm\"\r\n    ],\r\n    corrects: [3]\r\n  },\r\n]","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport { Container, Jumbotron, Pagination } from 'react-bootstrap';\n\nimport QuestionList from './QuestionList';\n\nimport { questions1 } from './databases/ooad/ooad1';\nimport { questions2 } from './databases/ooad/ooad2';\nimport { questions3 } from './databases/ooad/ooad3';\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Jumbotron>\n          <Pagination>\n            <Pagination.Item><Link to=\"/\">1</Link></Pagination.Item>\n            <Pagination.Item><Link to=\"/2\">2</Link></Pagination.Item>\n            <Pagination.Item><Link to=\"/3\">3</Link></Pagination.Item>\n          </Pagination>\n\n          <Route path=\"/\" exact component={() => <QuestionList questions={questions1} />} />\n          <Route path=\"/2\" component={() => <QuestionList questions={questions2} />} />\n          <Route path=\"/3\" component={() => <QuestionList questions={questions3} />} />\n\n          <Pagination>\n            <Pagination.Item><Link to=\"/\">1</Link></Pagination.Item>\n            <Pagination.Item><Link to=\"/2\">2</Link></Pagination.Item>\n            <Pagination.Item><Link to=\"/3\">3</Link></Pagination.Item>\n          </Pagination>\n        </Jumbotron>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}